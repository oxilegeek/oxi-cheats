local AcessTable = {
	785920831, --[[juju]]
	426302615, --[[Goldo]]
	780331817, --[[Goldo2]]
	1521284139, --[[oxifox]]
	1748832444, --[[oxifox2]]
	794604054, --[[licorne]]
	2541104873, --[[licorne2]]
	1201813160, --[[Lazy]]
	3301222843, --[[Girafelol]]
	3250939132, --[[leraptou alt]]
	3134085834, --[[leraptou alt2]]
	720726589, --[[Skylleur]]
	1025947173, --[[furylebg]]
}

local Acess = false

for i, v in pairs(AcessTable) do
	if game.Players.LocalPlayer.UserId == v then
		Acess = true
		print("yeeeee")
	end
end

if not Acess then
	print("refused")
	return
else
	print("Valid ^^")
end

-- var
local alive = true
local noclip = false
local UserInputService = game:GetService("UserInputService")
local infiniJump = false
local runservice = game:GetService("RunService")
local bot = false
local bringChest = false
local toChest = false
local autocollect = false
local HideReward = false
local baseSpeed = game.Players.LocalPlayer.Character.Humanoid.WalkSpeed
local baseJump = game.Players.LocalPlayer.Character.Humanoid.JumpPower
local baseGravity = game.Workspace.Gravity
local baseLevit = game.Players.LocalPlayer.Character.Humanoid.HipHeight
local killAuraTarget1 = nil
local killAuraTarget2 = nil
local killAuraTarget3 = nil
local killAuraTarget4 = nil
local spamHit1 = false
local spamHit2 = false
local spamHit3 = false
local spamHit4 = false
local KillAura = false
local autoHit = false
local tpPlayerFocus = nil
local autofarm = false
local BotFocus = nil
local FollowBot = false
local autoEat = false
local cooldownEat = 0
local CanKillGorilla = true
local CanKillCerber = true
local eToTeleport = false
local oldMaxZoom = game.Players.LocalPlayer.CameraMaxZoomDistance
local createPackName = nil
local RoleplayName = nil
local ShowPosition = false
local BossKillFarm = false
local BossKillFarmFix = false
local testSpeedValue = 16
local BossKillFarmFixFocus = "Trex"
local BABAutofarmSpeed = 1
local antiPortalAbuse = false
local slowloop = 1
local ZombieKillAura = false
local ZombieAutofarm = false
local flyKeybindToggle = true
local doCashier = false
local doCook = false
local doBoxer = false
local ffc = game.FindFirstChild
local orderDict={["3540529228"]="Cheese",["3540530535"]="Sausage",["3540529917"]="Pepperoni",["2512571151"]="Dew",["2512441325"]="Dew"}
local cookingDict = {Cheese=0,Sausage=0,Pepperoni=0,Dew=0}
local cookPtick = 0
local cookDtick = 0
local cookWarned = false
local boxerWarned = false
local basicSpeed = baseSpeed
local basicJump = baseJump
local basicLevitation = baseLevit
local basicGravity = baseGravity
local autoSetSpeed = false
local doDelivery = false
local doSupplier = false

--database var
local basicPrint = "hi ^^"

--build a boat
local BABFastAutofarm = false
local TheEnd = false
local SlotNumber = nil


--Database
--local printData = game:GetService("DataStoreService"):GetDataStore("PrintData")


-- function
local vu = game:GetService("VirtualUser")
game:GetService("Players").LocalPlayer.Idled:connect(function()
	vu:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
	wait(1)
	vu:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)

end)


function findNearestTorso(pos)
	local list = game.Players:GetPlayers()
	local torso = nil
	local dist = 1000
	local temp = nil
	local human = nil
	local temp2 = nil
	for x = 1, #list do
		temp2 = list[x]
		if temp2.Name == game.Players.LocalPlayer.Name then

		else
			temp = temp2.Character:findFirstChild("HumanoidRootPart")
			human = temp2.Character:findFirstChild("Humanoid")
			if (temp ~= nil) and (human ~= nil) and (human.Health > 0) then
				if (temp.Position - pos).magnitude < dist then
					torso = temp
					dist = (temp.Position - pos).magnitude
				end
			end
		end
	end
	return torso
end




local function autoFarmBAB()
	repeat wait(0.1) until game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
	local stages = game.Workspace.BoatStages.NormalStages:GetChildren()
	for i = 1, #stages do
		if alive then
			if i < 11 then
				if BABFastAutofarm then
					print(stages[i].Name)
					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(stages[i].DarknessPart.Position)
					wait(BABAutofarmSpeed)
				end
			else
				if i == 12 then
					break
				end
				if BABFastAutofarm then
					TheEnd = true
					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(game.Workspace.BoatStages.NormalStages.TheEnd.GoldenChest.Base.LockPosition.Position)
				end
			end
		end
	end
end

if game.GameId == 210851291 then
	game.Players.LocalPlayer.PlayerGui.RiverResultsGui.Frame.Changed:Connect(function()
		print("respawned")
		if BABFastAutofarm then
			autoFarmBAB()
		end
	end)
end

function bot()
	while wait() do
		local goal = game.Players:FindFirstChild(FollowBot).Character.HumanoidRootPart

		local pathfinding = game:GetService("PathfindingService")

		local path = pathfinding:CreatePath()
		path:ComputeAsync(game.Players.LocalPlayer.Character.HumanoidRootPart.Position, goal.Position)

		local waypoints = path:GetWaypoints()


		for i, waypoint in pairs(waypoints) do

			if waypoint.Action == Enum.PathWaypointAction.Jump then

				game.Players.LocalPlayer.Character.Humanoid.Jump = true
			end

			game.Players.LocalPlayer.Character.Humanoid:MoveTo(waypoint.Position)

			game.Players.LocalPlayer.Character.Humanoid.MoveToFinished:Wait()

		end
	end
end

_G.FLYING = false
local CONTROL = {F = 0, B = 0, L = 0, R = 0}
local lCONTROL = {F = 0, B = 0, L = 0, R = 0}
local SPEED = 5
local MOUSE = game.Players.LocalPlayer:GetMouse()
local flySpeed = 50


local function FLY()
	local BG = Instance.new('BodyGyro', game.Players.LocalPlayer.Character.HumanoidRootPart)
	local BV = Instance.new('BodyVelocity', game.Players.LocalPlayer.Character.HumanoidRootPart)
	BG.P = 9e4
	BG.maxTorque = Vector3.new(9e9, 9e9, 9e9)
	BG.cframe = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
	BV.velocity = Vector3.new(0, 0.1, 0)
	BV.maxForce = Vector3.new(9e9, 9e9, 9e9)


	spawn(function()
		repeat wait()
			game.Players.LocalPlayer.Character.Humanoid.PlatformStand = true
			if CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0 then
				SPEED = flySpeed
			elseif not (CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0) and SPEED ~= 0 then
				SPEED = 0
			end
			if (CONTROL.L + CONTROL.R) ~= 0 or (CONTROL.F + CONTROL.B) ~= 0 then
				BV.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (CONTROL.F + CONTROL.B)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(CONTROL.L + CONTROL.R, (CONTROL.F + CONTROL.B) * 0.2, 0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
				lCONTROL = {F = CONTROL.F, B = CONTROL.B, L = CONTROL.L, R = CONTROL.R}
			elseif (CONTROL.L + CONTROL.R) == 0 and (CONTROL.F + CONTROL.B) == 0 and SPEED ~= 0 then
				BV.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (lCONTROL.F + lCONTROL.B)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(lCONTROL.L + lCONTROL.R, (lCONTROL.F + lCONTROL.B) * 0.2, 0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
			else
				BV.velocity = Vector3.new(0, 0.1, 0)
			end
			BG.cframe = game.Workspace.CurrentCamera.CoordinateFrame
		until not _G.FLYING or _G.FLYING and not flyKeybindToggle
		CONTROL = {F = 0, B = 0, L = 0, R = 0}
		lCONTROL = {F = 0, B = 0, L = 0, R = 0}
		SPEED = 0
		BG:destroy()
		BV:destroy()
		game.Players.LocalPlayer.Character.Humanoid.PlatformStand = false
	end)
end

MOUSE.KeyDown:connect(function(KEY)
	if KEY:lower() == 'w' then
		CONTROL.F = 1
	elseif KEY:lower() == 's' then
		CONTROL.B = -1
	elseif KEY:lower() == 'a' then
		CONTROL.L = -1 
	elseif KEY:lower() == 'd' then 
		CONTROL.R = 1
	end
end)

MOUSE.KeyUp:connect(function(KEY)
	if KEY:lower() == 'w' then
		CONTROL.F = 0
	elseif KEY:lower() == 's' then
		CONTROL.B = 0
	elseif KEY:lower() == 'a' then
		CONTROL.L = 0
	elseif KEY:lower() == 'd' then
		CONTROL.R = 0
	end
end)


--Animal function
if game.GameId == 2023680558 then
	function findNearestZombieTorso(pos)
		local list = game:GetService("Workspace").NPC:GetChildren()
		local torso = nil
		local dist = 1000
		local temp = nil
		local human = nil
		local temp2 = nil
		for x = 1, #list do
			temp2 = list[x]
			if temp2.Name == "Zombie" or temp2.Name == "BigSpider" then
				temp = temp2:findFirstChild("HumanoidRootPart")
				human = temp2:findFirstChild("Humanoid")
				if (temp ~= nil) and (human ~= nil) and (human.Health > 0) then
					if (temp.Position - pos).magnitude < dist then
						torso = temp
						dist = (temp.Position - pos).magnitude
					end
				end
			end
		end
		return torso
	end
end

local supplyCounts = {TomatoSauce=99,Cheese=99,Sausage=99,Pepperoni=99,Dough=99,Box=99,Dew=99}
local player = game:GetService("Players").LocalPlayer
local ffc = game.FindFirstChild
local RNG = Random.new()
local network
local character,root
local boxPtick=0
local boxDtick=0
local delTool
local delTouched=false
local bcolorToSupply = {["Dark orange"]="Sausage",["Bright blue"]="Pepperoni",["Bright yellow"]="Cheese",["Bright red"]="TomatoSauce",["Dark green"]="Dew",["Brick yellow"]="Dough",["Light stone grey"]="Box",["Really black"]="Dew"}
local supplyButtons = {}

--Work at a pizza place func
if game.GameId == 47545 then
	
	for _,button in ipairs(workspace.SupplyButtons:GetChildren()) do
		supplyButtons[bcolorToSupply[button.Unpressed.BrickColor.Name]] = button.Unpressed
	end

	do
		local reg = (getreg or debug.getregistry)()
		for i=1,#reg do
			local f = reg[i]
			if type(f)=="function" and tostring(getfenv(f).script)=="Paycheck" then
				for k,v in next,getupvalues(f) do
					if tostring(v) == "CashOut" then
						setupvalue(f,k,{MouseButton1Click={wait=function()end,Wait=function()end}})
						break
					end
				end
			elseif type(f)=="table" and rawget(f,"FireServer") and rawget(f,"BindEvents") then
				network = f
			end
		end
		local mt=getrawmetatable(game)
		if setreadonly then
			setreadonly(mt,false)
		elseif make_writeable then
			make_writeable(mt)
		end
		local old__newindex=mt.__newindex
		if newcclosure then
			mt.__newindex=newcclosure(function(t,k,v)
				if t~=workspace.CurrentCamera or tostring(getfenv(2).script)~="LocalMain" then
					return old__newindex(t,k,v)
				end
			end)
		else
			mt.__newindex=function(t,k,v)
				if t~=workspace.CurrentCamera or tostring(getfenv(2).script)~="LocalMain" then
					return old__newindex(t,k,v)
				end
			end
		end
		workspace.Main.RealignCamera.RealignCamera:Destroy()
		Instance.new("BindableEvent",workspace.Main.RealignCamera).Name="RealignCamera"
	end
	assert(network,"failed to find network")

	function onCharacterAdded(char)
		if not char then return end
		character=char
		root = character:WaitForChild("HumanoidRootPart")
		character:WaitForChild("Humanoid"):GetPropertyChangedSignal("WalkSpeed"):Connect(function()
			if delTool then
				character.Humanoid.WalkSpeed=16
			end
		end)
	end
	onCharacterAdded(player.Character or player.CharacterAdded:Wait())
	player.CharacterAdded:Connect(onCharacterAdded)


	for name in pairs(supplyCounts) do
		local lbl = workspace.SupplyCounters[name=="Dew" and "CounterMountainDew" or "Counter"..name].a.SG.Counter
		supplyCounts[name]=tonumber(lbl.Text)
		lbl.Changed:Connect(function()
			supplyCounts[name]=tonumber(lbl.Text)
		end)
	end

	function FindFirstCustomer()
		local children = workspace.Customers:GetChildren()
		for i=1,#children do
			local c = children[i]
			if ffc(c,"Head") and ffc(c,"Humanoid") and c.Head.CFrame.Z<102 and ffc(c.Head,"Dialog") and ffc(c.Head.Dialog,"Correct") and ((c.Humanoid.SeatPart and c.Humanoid.SeatPart.Anchored) or (c.Humanoid.SeatPart==nil and (c.Head.Velocity.Z^2)^.5<.0001)) then
				return c

			end
		end
	end



	function getOrders()
		local orders={}
		local tempCookingDict = {}
		for i,v in pairs(cookingDict) do tempCookingDict[i]=v end
		local children = workspace.Orders:GetChildren()
		for i=1,#children do
			local o = orderDict[children[i].SG.ImageLabel.Image:match("%d+$")]
			if o then
				if tempCookingDict[o]>0 then
					--ignores oven pizzas, so new orders are priority
					tempCookingDict[o]=tempCookingDict[o]-1
				elseif (o=="Dew" and #workspace.AllMountainDew:GetChildren()>0) or (supplyCounts[o]>0 and supplyCounts.TomatoSauce>0 and supplyCounts.Cheese>0) then
					--need supplies
					orders[#orders+1]=o
				end
			end
		end
		return orders
	end

	function FindFirstDew()
		local children = workspace.AllMountainDew:GetChildren()
		for i=1,#children do
			if not children[i].Anchored then
				return children[i]
			end
		end
	end

	function FindDoughAndWithout(str)
		local goodraw,p,raw,trash
		local children = workspace.AllDough:GetChildren()
		for i = #children, 2, -1 do --shuffle
			local j = RNG:NextInteger(1, i)
			children[j], children[i] = children[i], children[j]
		end
		for i=1,#children do
			local d = children[i]
			if d.Anchored==false and #d:GetChildren()>9 then
				if d.IsBurned.Value or d.HasBugs.Value or d.Cold.Value or (d.BrickColor.Name=="Bright orange" and ffc(d,"XBillboard")) then
					if trash==nil and d.Position.Y > 0 then
						trash=d
					end
				elseif p==nil and d.BrickColor.Name=="Bright orange" then
					p=d
				elseif goodraw==nil and d.Position.X<55 and d.BrickColor.Name=="Brick yellow" and ((str and not ffc(d.SG.Frame,str)) or (str==nil and ffc(d.SG.Frame,"Sausage")==nil and ffc(d.SG.Frame,"Pepperoni")==nil)) then
					--prefers flat
					if d.Mesh.Scale.Y<1.1 then
						goodraw=d
					else
						raw=d
					end
				end
				if goodraw and p and trash then
					return goodraw,p,trash
				end
			end
		end
		return goodraw or raw,p,trash
	end

	function getOvenNear(pos)
		local children = workspace.Ovens:GetChildren()
		for i=1,#children do
			if (children[i].Bottom.Position-pos).magnitude < 1.5 then
				return children[i]
			end
		end
	end
	function getDoughNear(pos)
		local children = workspace.AllDough:GetChildren()
		for i=1,#children do
			if (children[i].Position-pos).magnitude < 1.5 then
				return children[i]
			end
		end
	end
	function isFullyOpen(oven)
		return oven.IsOpen.Value==true and (oven.Door.Meter.RotVelocity.Z^2)^.5<.0001
	end

	function FindBoxes()
		local c,o,f
		local children = workspace.AllBox:GetChildren()
		for i=1,#children do
			local b = children[i]
			if ffc(b,"HasPizzaInside") or ffc(b,"Pizza") then
				if c==nil and b.Name=="BoxClosed" and b.Anchored==false and not b.HasPizzaInside.Value then
					c=b
				elseif o==nil and b.Name=="BoxOpen" and b.Anchored==false and not b.Pizza.Value then
					o=b
				elseif f==nil and (b.Name=="BoxOpen" and b.Pizza.Value) or (b.Name=="BoxClosed" and b.HasPizzaInside.Value) then
					f=b
				end
				if c and o and f then
					return c,o,f
				end
			end
		end
		return c,o,f
	end

	function FindBoxingFoods()
		local p,d
		local children = workspace.BoxingRoom:GetChildren()
		for i=1,#children do
			local f = children[i]
			if not f.Anchored then
				if p==nil and f.Name=="Pizza" then
					p=f
				elseif d==nil and f.Name=="Dew" then
					d=f
				end
				if p and d then
					return p,d
				end
			end
		end
		return p,d
	end


	function FindFirstDeliveryTool()
		local t
		local children = workspace:GetChildren()
		for i=1,#children do
			local v = children[i]
			if v.ClassName=="Tool" and v.Name:match("^%u%d$") and ffc(v,"House") and ffc(v,"Handle") and ffc(v,"Order") and v.Order.Value:match("%a") then
				if ffc(v.Handle,"X10") then
					return v
				end
				t = v
			end
		end
		return t
	end
	function getHousePart(address)
		local houses = workspace.Houses:GetChildren()
		for i=1,#houses do
			local h = houses[i]
			if ffc(h,"Address") and h.Address.Value==address and ffc(h,"CurrentUpgrade") and h.CurrentUpgrade.Value and ffc(h.CurrentUpgrade.Value,"GivePizza") then
				return h.CurrentUpgrade.Value.GivePizza
			end
		end
	end
	local delTouched=false
	function forgetDeliveryTool()
		if delTool then
			if delTool.Parent==player.Backpack then
				delTool.Parent = character
			end
			if delTool.Parent==character then
				wait(0.1)
				delTool.Parent = workspace
				wait(0.1)
			end
		end
		delTool=nil
		delTouched=false
		if ffc(character,"RightHand") and ffc(character.RightHand,"RightGrip") then
			character.RightHand.RightGrip:Destroy()
		end
	end

	function simTouch(part)
		local oldcc = part.CanCollide
		local oldcf = part.CFrame
		part.CanCollide = false
		root.CFrame = part.CFrame
		delay(0.01,function()
			part.CFrame = oldcf
			part.CanCollide = oldcc
		end)
	end
end

-- init
local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/oxilegeek/gui-creator/main/gui%20creator"))()
local venyx = library.new("Oxi cheats", 5013109572)


-- themes
local themes = {
	Background = Color3.fromRGB(24, 24, 24),
	Glow = Color3.fromRGB(0, 0, 0),
	Accent = Color3.fromRGB(10, 10, 10),
	LightContrast = Color3.fromRGB(20, 20, 20),
	DarkContrast = Color3.fromRGB(14, 14, 14),  
	TextColor = Color3.fromRGB(255, 255, 255)
}

local function deleteGui()
	game.CoreGui:FindFirstChild("Oxi cheats"):Destroy()
	alive = false
end

-- CHARACTER
local page = venyx:addPage("Character", 5012544693)
local BasicHack = page:addSection("Basic hack")
local HumanoidStat = page:addSection("Humanoid stat")
local TeleportPage = page:addSection("Teleport and spectate")
local BotPage = page:addSection("Bot")
local FunPage = page:addSection("Fun")

BasicHack:addToggle("infinity jump", nil, function(value)
	infiniJump = value
end)

BasicHack:addToggle("noclip", nil, function(value)
	noclip = value
end)

BasicHack:addToggle("key to teleport", nil, function(value)
	eToTeleport = value
end)

BasicHack:addKeybind("TeleportKey : ", Enum.KeyCode.E, function()
	local mouse = game.Players.LocalPlayer:GetMouse()
	if mouse.Target then
		if eToTeleport then
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(mouse.Hit.x, mouse.Hit.y + 5, mouse.Hit.z)
		end
	end
end)

BasicHack:addToggle("Anchored", nil, function(value)
	if value then
		game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = true
	else
		game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = false
	end
end)

BasicHack:addToggle("fly", nil, function(value)
	_G.FLYING = value
	FLY()
end)

BasicHack:addKeybind("fly keybind : ", Enum.KeyCode.F, function()
	if _G.FLYING then
		FLY()
		flyKeybindToggle = not flyKeybindToggle
	end
end)

BasicHack:addTextbox("Fly speed", "50", function(value, focusLost)
	if focusLost then
		if tonumber(value) > 0 then
			flySpeed = tonumber(value)
		end
	end
end)




HumanoidStat:addToggle("Coordinate", nil, function(value)
	if value then
		local CoUi = Instance.new("ScreenGui", game.Players.LocalPlayer.PlayerGui)
		CoUi.Name = "PositionGui"
		CoUi.ResetOnSpawn = false

		local CoLabel = Instance.new("TextLabel", CoUi)
		CoLabel.Name = "Pos"
		CoLabel.BackgroundTransparency = 1
		CoLabel.TextScaled = true
		CoLabel.Size = UDim2.new(0.3, 0, 0.1, 0)
		CoLabel.Position = UDim2.new(0.7, 0,0.2, 0)
		CoLabel.TextColor3 = Color3.new(255, 255, 255)
		CoLabel.TextStrokeTransparency = 0

		ShowPosition = true
	else
		ShowPosition = false
		game.Players.LocalPlayer.PlayerGui.PositionGui:Destroy()
	end
end)

HumanoidStat:addSlider("Speed", 16, 0, 300, function(value)
	game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = value
	basicSpeed = value
end)

HumanoidStat:addSlider("Jump power", 50, 0, 500, function(value)
	game.Players.LocalPlayer.Character.Humanoid.JumpPower = value
	basicJump = value
end)

HumanoidStat:addSlider("Gravity", 196.2, 0, 500, function(value)
	game.Workspace.Gravity = value
	basicGravity = value
end)

HumanoidStat:addSlider("Levitation", 1, 0, 500, function(value)
	game.Players.LocalPlayer.Character.Humanoid.HipHeight = value / 10
	basicLevitation = value
end)

HumanoidStat:addButton("Reset", function()
	game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = baseSpeed
	game.Workspace.Gravity = baseGravity
	game.Players.LocalPlayer.Character.Humanoid.JumpPower = baseJump
	game.Players.LocalPlayer.Character.Humanoid.HipHeight = baseLevit
end)

HumanoidStat:addToggle("auto setSpeed (lag warning)", nil, function(value)
	autoSetSpeed = value
end)



TeleportPage:addTextbox("Player", "player name", function(value, focusLost)
	if focusLost then
		tpPlayerFocus = value
	end
end)

TeleportPage:addButton("Teleport", function()
	if game.Players:FindFirstChild(tpPlayerFocus) and game.Players:FindFirstChild(tpPlayerFocus).Character then
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players:FindFirstChild(tpPlayerFocus).Character.HumanoidRootPart.Position)
	else
		venyx:Notify("ERROR", "Invalid player")
	end
end)

TeleportPage:addButton("Spectate", function()
	if game.Players:FindFirstChild(tpPlayerFocus) and game.Players:FindFirstChild(tpPlayerFocus).Character then
		game.Workspace.CurrentCamera.CameraSubject = game.Players:FindFirstChild(tpPlayerFocus).Character.Humanoid
	else
		venyx:Notify("ERROR", "Invalid player")
	end
end)

TeleportPage:addButton("Unspectate", function()
	game.Workspace.CurrentCamera.CameraSubject = game.Players.LocalPlayer.Character.Humanoid
end)



BotPage:addTextbox("Bot", "player name", function(value, focusLost)
	if focusLost then
		BotFocus = value
	end
end)

BotPage:addButton("Folow player", function()
	if FollowBot == false then
		FollowBot = true
	end
end)

BotPage:addButton("Stop bot", function()
	FollowBot = false
end)




FunPage:addButton("Sit", function()
	game.Players.LocalPlayer.Character.Humanoid.Sit = true
end)

FunPage:addButton("Delete animation", function()
	game.Players.LocalPlayer.Character.Humanoid.Animator:Destroy()
end)

FunPage:addButton("Special reset character", function()
	game.Players.LocalPlayer.Character.Humanoid:Destroy()
end)

FunPage:addButton("AMOGUS", function()
	local args = {
		[1] = "AMOGUS",
		[2] = "All"
	}

	game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(unpack(args))
end)



-- Visual
local page = venyx:addPage("Visual", 5012544693)
local CameraPage = page:addSection("Camera")
local LightingPage = page:addSection("Lighting")
local GuiPage = page:addSection("Gui")


CameraPage:addToggle("Camera noclip", nil, function(value)
	if value then
		game.Players.LocalPlayer.DevCameraOcclusionMode = 1
	else
		game.Players.LocalPlayer.DevCameraOcclusionMode = 0
	end
end)

CameraPage:addToggle("Unlock Camera max zoom distance", nil, function(value)
	if value then
		game.Players.LocalPlayer.CameraMaxZoomDistance = 100000
	else
		game.Players.LocalPlayer.CameraMaxZoomDistance = oldMaxZoom
	end
end)

CameraPage:addSlider("FOV", 70, 0, 120, function(value)
	game.Workspace.Camera.FieldOfView = value
end)

CameraPage:addButton("Reset fov", function()
	game.Workspace.Camera.FieldOfView = 70
end)

CameraPage:addToggle("Freecam", nil, function(value)
	if value then
		game.Workspace.Camera.CameraType = "Scriptable"
	else
		game.Workspace.Camera.CameraType = "Custom"
	end
end)



LightingPage:addSlider("Brightness", 2, 0, 120, function(value)
	game.Lighting.Brightness = value
end)

LightingPage:addToggle("HideGlobalShadows", nil, function(value)
	game.Lighting.GlobalShadows = not value
end)

CameraPage:addButton("Shaders", function()

end)

GuiPage:addToggle("HideMenu", nil, function(value)
	for i, v in pairs(game.Players.LocalPlayer.PlayerGui:GetChildren()) do
		if v:IsA("ScreenGui") then
			v.Enabled = not value
		end
	end
end)




-- BasicTp
local page = venyx:addPage("Custom tp", 5012544693)
local locationcreator = page:addSection("create a location")

locationcreator:addTextbox("CustomTp", "location name", function(value, focusLost)
	if focusLost then
		customTpName = value
	end
end)

locationcreator:addButton("Create location", function()
	if customTpName ~= nil then
		if game.CoreGui:FindFirstChild("Oxi cheats").Main:FindFirstChild("Custom tp"):FindFirstChild(customTpName) then
			venyx:Notify("Error", "Incorect name")
		else
			local tppage = page:addSection(customTpName)
			local buttonPosition = game.Players.LocalPlayer.Character.HumanoidRootPart.Position
			tppage:addButton("Tp boutton", function()
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(buttonPosition)
			end)

			tppage:addKeybind("TP keybind : ", nil, function()
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(buttonPosition)
			end)

			tppage:addButton("Delete location (comming soon)", function()

			end)

			venyx:SelectPage(venyx.pages[1], true)
			venyx:SelectPage(venyx.pages[3], true)
		end
	else
		venyx:Notify("Error", "Incorect name")
	end
end)





-- ANIMAL SIMULATOR

if game.GameId == 2023680558 then
	local page = venyx:addPage("Animal simulator", 5012544693)

	local ChestPage = page:addSection("Chest")
	local packPage = page:addSection("Pack and Name")
	local BossPage = page:addSection("Boss (beta)")
	local trollPage = page:addSection("Troll")
	local OtherPage = page:addSection("Other")

	ChestPage:addToggle("farm bot", nil, function(value)
		bot = value
		if bot then
			loadstring(game:HttpGet("https://pastebin.com/raw/Q37wgSjN", true))()
		else
			game.Players.LocalPlayer.Character.Humanoid.Name = "a"
			wait(0.2)
			game.Players.LocalPlayer.Character.a.Name = "Humanoid"
		end
	end)

	ChestPage:addToggle("bring chest", nil, function(value)
		bringChest = value
	end)

	ChestPage:addToggle("tp to chest", nil, function(value)
		toChest = value
	end)

	ChestPage:addToggle("autocollect", nil, function(value)
		autocollect = value
	end)

	ChestPage:addToggle("Hide chest reward", nil, function(value)
		HideReward = value
	end)





	packPage:addButton("Create invisible pack", function()
		game:GetService("Players").LocalPlayer.PlayerGui.TeamGUI.noTeamFrame.teamInfo.createBtn.createTeamEvent:FireServer(nil)
		game:GetService("Players").LocalPlayer.PlayerGui.TeamGUI.Enabled = true
	end)

	packPage:addButton("Remove name caracter limit", function()
		game.Players.LocalPlayer.PlayerGui.RolePlayName.Frame.NameTB.limit:Destroy()
	end)




	BossPage:addToggle("Killaura lava gorilla", nil, function(value)
		_G.BossGorillaFarm = value
	end)

	BossPage:addButton("tp to Gorilla", function()
		if game.Workspace.NPC:findFirstChild("LavaGorilla") and game.Workspace.NPC.LavaGorilla:findFirstChild("HumanoidRootPart") then
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(game.Workspace.NPC.LavaGorilla.HumanoidRootPart.Position)
		else
			venyx:Notify("ERROR", "gorilla is death !")
		end
	end)

	BossPage:addToggle("Killaura cerbus", nil, function(value)
		_G.BossCerberFarm = value
	end)

	BossPage:addButton("tp to cerber", function()
		if game.Workspace.NPC:findFirstChild("Trex") and game.Workspace.NPC.Trex:findFirstChild("HumanoidRootPart") then
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(game.Workspace.NPC.Trex.HumanoidRootPart.Position)
		else
			venyx:Notify("ERROR", "cerber is death !")
		end
	end)

	BossPage:addToggle("Killaura drake", nil, function(value)
		_G.BossDrakeFarm = value
	end)

	BossPage:addButton("tp to drake", function()
		if game.Workspace.NPC:findFirstChild("Drake") and game.Workspace.NPC.Drake:findFirstChild("HumanoidRootPart") then
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(game.Workspace.NPC.Drake.HumanoidRootPart.Position)
		else
			venyx:Notify("ERROR", "drake is death !")
		end
	end)

	BossPage:addToggle("DragonSlayer", nil, function(value)
		_G.BossDragonSlayerFarm = value
	end)

	BossPage:addButton("tp to DragonSlayer", function()
		if game.Workspace.NPC:findFirstChild("DragonSlayer") and game.Workspace.NPC.DragonSlayer:findFirstChild("HumanoidRootPart") then
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(game.Workspace.NPC.DragonSlayer.HumanoidRootPart.Position)
		else
			venyx:Notify("ERROR", "DragonSlayer is death !")
		end
	end)



	trollPage:addButton("Drop head (animal)", function()
		game.Players.LocalPlayer.Character.Neck.Motor6D:Destroy()
	end)


	OtherPage:addToggle("Show player Username", nil, function(value)
		if value then
			game.Players.LocalPlayer.NameDisplayDistance = 100000
		else
			game.Players.LocalPlayer.NameDisplayDistance = 0
		end
	end)









	-- TP
	local page = venyx:addPage("TP", 5012544693)

	local TpPage = page:addSection("Teleport")


	TpPage:addButton("Safe zone", function()
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-559, -408, 2489)
	end)

	TpPage:addButton("DJ", function()
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-819, -403, 2486)
	end)

	TpPage:addButton("Gorrila spawn", function()
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(516, -337, 2092)
	end)

	TpPage:addButton("Cerber spawn", function()
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-254, -424, 3321)
	end)

	TpPage:addButton("Secret base", function()
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-636, -410, 3012)
	end)






	-- PVP
	local page = venyx:addPage("PVP", 5012544693)

	local keyboardPage = page:addSection("Autokeyboard")
	--local ItemPage = page:addSection("GiveItem")
	local zombiePage = page:addSection("Zombie Kill aura")
	local KillAuraPage = page:addSection("Kill aura")
	local KillAuraPage1 = page:addSection("Kill aura1")
	local KillAuraPage2 = page:addSection("Kill aura2")
	local KillAuraPage3 = page:addSection("Kill aura3")
	local KillAuraPage4 = page:addSection("Kill aura4")

	keyboardPage:addToggle("auto hit", nil, function(value)
		autoHit = value
	end)

	keyboardPage:addToggle("auto eat (unstable)", nil, function(value)
		autoEat = value
	end)



	--ItemPage:addButton("Give fireball", function()
	--	local FireFounded = false
	--	for i, v in pairs(game.Players:GetDescendants()) do
	--		if v.Name == "Fireball" and v:FindFirstChild("FireballEvent") then
	--			v.Parent = game.Players.LocalPlayer.Backpack
	--			FireFounded = true
	--		end
	--	end
	--	if not FireFounded then
	--		venyx:Notify("Error", "No fire found :c")
	--	end
	--end)


	zombiePage:addToggle("Zombie kill aura", nil, function(value)
		ZombieKillAura = value
	end)





	KillAuraPage:addToggle("Kill aura", nil, function(value)
		KillAura = value
	end)






	KillAuraPage1:addTextbox("kill aura target", "player name", function(value, focusLost)
		if focusLost then
			killAuraTarget1 = value
		end
	end)

	KillAuraPage1:addKeybind("Hit this player : ", Enum.KeyCode.E, function()
		if game.Players:FindFirstChild(killAuraTarget1) then
			game.ReplicatedStorage.jdskhfsIIIllliiIIIdchgdIiIIIlIlIli:FireServer(game.Players:FindFirstChild(killAuraTarget1).Character.Humanoid)
		end
	end)

	KillAuraPage1:addToggle("spam hit", nil, function(value)
		spamHit1 = value
	end)






	KillAuraPage2:addTextbox("kill aura target", "player name", function(value, focusLost)
		if focusLost then
			killAuraTarget2 = value
		end
	end)

	KillAuraPage2:addKeybind("Hit this player : ", Enum.KeyCode.E, function()
		if game.Players:FindFirstChild(killAuraTarget1) then
			game.ReplicatedStorage.jdskhfsIIIllliiIIIdchgdIiIIIlIlIli:FireServer(game.Players:FindFirstChild(killAuraTarget1).Character.Humanoid)
		end
	end)

	KillAuraPage2:addToggle("spam hit", nil, function(value)
		spamHit2 = value
	end)






	KillAuraPage3:addTextbox("kill aura target", "player name", function(value, focusLost)
		if focusLost then
			killAuraTarget3 = value
		end
	end)

	KillAuraPage3:addKeybind("Hit this player : ", Enum.KeyCode.E, function()
		if game.Players:FindFirstChild(killAuraTarget1) then
			game.ReplicatedStorage.jdskhfsIIIllliiIIIdchgdIiIIIlIlIli:FireServer(game.Players:FindFirstChild(killAuraTarget1).Character.Humanoid)
		end
	end)

	KillAuraPage3:addToggle("spam hit", nil, function(value)
		spamHit3 = value
	end)






	KillAuraPage4:addTextbox("kill aura target", "player name", function(value, focusLost)
		if focusLost then
			killAuraTarget4 = value
		end
	end)

	KillAuraPage4:addKeybind("Hit this player : ", Enum.KeyCode.E, function()
		if game.Players:FindFirstChild(killAuraTarget1) then
			game.ReplicatedStorage.jdskhfsIIIllliiIIIdchgdIiIIIlIlIli:FireServer(game.Players:FindFirstChild(killAuraTarget1).Character.Humanoid)
		end
	end)

	KillAuraPage4:addToggle("spam hit", nil, function(value)
		spamHit4 = value
	end)












	-- Autofarm
	local page = venyx:addPage("Autofarm", 5012544693)

	local onlineAutofarmPage = page:addSection("Online autofarm")
	local afkAutofarmPage = page:addSection("afk autofarm")


	onlineAutofarmPage:addToggle("boss kill farm", nil, function(value)
		BossKillFarm = value
	end)



	afkAutofarmPage:addToggle("training area farm", nil, function(value)
		autofarm = value
		if value then
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-562 , -409, 2531)
			for i, v in pairs(game.Workspace.pleaseno:GetChildren()) do
				if i == 7 then
					v.Name = "farm"
				end
			end
		else

		end
	end)


	afkAutofarmPage:addToggle("boss kill farm fix", nil, function(value)
		if value then
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(129, -70, 2443)
			vu:SetKeyDown("t")
			vu:SetKeyUp("t")
		else
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(259.826, -12.396, 3053.77)
		end
		BossKillFarmFix = value
	end)


	afkAutofarmPage:addToggle("Zombie Autofarm", nil, function(value)
		ZombieAutofarm = value
		if value then

		else
			game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = false
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(259.826, -12.396, 3053.77)
		end
	end)
end



----------------------------------------------------------------------------------------------------------------------------
----------------------------------------------Pizza place-------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------
print(game.GameId)
if game.GameId == 47545 then
	print("pizza")
	local page = venyx:addPage("Pizza place", 5012544693)

	local AutoworkPage = page:addSection("Autowork")


	AutoworkPage:addToggle("Cashier", nil, function(value)
		doCashier = value
	end)

	AutoworkPage:addToggle("Cook", nil, function(value)
		doCook = value
	end)

	AutoworkPage:addToggle("Boxer", nil, function(value)
		doBoxer = value
	end)

	AutoworkPage:addToggle("Delivrery", nil, function(value)
		doDelivery = value
	end)

	AutoworkPage:addToggle("Supplier", nil, function(value)
		doSupplier = value
	end)

end



----------------------------------------------------------------------------------------------------------------------------
----------------------------------------------BUILD A BOAT------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------

if game.GameId == 210851291 then
	local page = venyx:addPage("Build a boat", 5012544693)

	local AutofarmPage = page:addSection("Autofarm")
	local MiscPage = page:addSection("Misc")
	local Transform = page:addSection("Transform")
	local Utility = page:addSection("Utility")


	AutofarmPage:addToggle("fast autofarm", nil, function(value)
		BABFastAutofarm = value
		if value then
			autoFarmBAB()
		else

		end
	end)

	AutofarmPage:addSlider("Autofarm speed", 4, 1, 5, function(value)
		print(value)
		BABAutofarmSpeed = 6 - value
	end)

	MiscPage:addButton("Water Godmode", function()
		LocalPlayerName = game:GetService("Players").LocalPlayer.Name
		LocalPlayerWorkspace = game:GetService("Workspace")[LocalPlayerName]
		LocalPlayerWorkspace.WaterDetector:Destroy()
	end)



	Transform:addButton("Fox Character", function()
		game.Workspace.ChangeCharacter:FireServer("FoxCharacter")
	end)
	Transform:addButton("Chicken Character", function()
		game.Workspace.ChangeCharacter:FireServer("ChickenCharacter")
	end)
	Transform:addButton("Penguin Character", function()
		game.Workspace.ChangeCharacter:FireServer("PenguinCharacter")
	end)


	Utility:addToggle("Anti Portal Abuse", nil, function(value)
		antiPortalAbuse = value
	end)

	Utility:addTextbox("slot", "slot number", function(value, focusLost)
		if focusLost then
			SlotNumber = value
		end
	end)

	Utility:addButton("Load slot", function()
		local args = {
			[1] = SlotNumber,
			[2] = 0
		}

		workspace.LoadBoatData:FireServer(unpack(args))

	end)

	Utility:addButton("Clear all", function()
		workspace.ClearAllPlayersBoatParts:FireServer()
	end)

	Utility:addButton("Buy 50 wood", function()
		local args = {
			[1] = "WoodBlock",
			[2] = 1
		}

		workspace.ItemBoughtFromShop:InvokeServer(unpack(args))
	end)

	Utility:addButton("Hide menu", function()
		game.Players.LocalPlayer.PlayerGui.ShopGui.SideFrame.MenuButton.Visible = false
		game.Players.LocalPlayer.PlayerGui.GoldGui.Frame.Visible = false
		game.Players.LocalPlayer.PlayerGui.LaunchBoatGui.LaunchFrame.Visible = false
		game.Players.LocalPlayer.PlayerGui.PlayerListGui.Frame.Visible = false

		for i, Item in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
			Item:Destroy()
		end
	end)
end












----------------------------------------------------------------------------------------------------------------------------
----------------------------------------------ISLAND------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------

if game.GameId == 1659645941 then
	local page = venyx:addPage("Caranboule", 5012544693)

	local StarfruitPage = page:addSection("Starfruit")


	StarfruitPage:addToggle("fast autofarm", nil, function(value)
		if value then
			loadstring(game:HttpGet("https://raw.githubusercontent.com/oxilegeek/oxi-cheats/main/starfruit%20island", true))()
		else
			_G.LOL2 = false
		end
	end)
end








----------------------------------------------------------------------------------------------------------------------------
----------------------------------------------TEST ZONE---------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------
local page = venyx:addPage("Test zone", 5012544693)

local testPage = page:addSection("Test")

testPage:addTextbox("Notification", "Default", function(value, focusLost)
	if focusLost then
		venyx:Notify("Title", "text")
	end
end)

--local plrs = {}
--for i, v in pairs(game.Players:GetPlayers()) do
--	table.insert(plrs, 1, v.Name)
--end
--testPage:addDropdown("Dropdown", plrs, function(text)
--	print("Selected", text)
--end)

testPage:addTextbox("BasePrint", "Default", function(value, focusLost)
	if focusLost then
	end
end)



testPage:addSlider("test", testSpeedValue, 1, 1000, function(value)

end)






-- THEME
local theme = venyx:addPage("Theme", 5012544693)
local colors = theme:addSection("Colors")

for theme, color in pairs(themes) do -- all in one theme changer, i know, im cool
	colors:addColorPicker(theme, color, function(color3)
		venyx:setTheme(theme, color3)
	end)
end

-- SETTING
local setting = venyx:addPage("Core", 5012544693)
local BasicSetting = setting:addSection("Basic setting")
local OtherGui = setting:addSection("Other Gui")

BasicSetting:addKeybind("Toggle Keybind", Enum.KeyCode.RightShift, function()
	venyx:toggle()
end, function()
end)

BasicSetting:addButton("Refresh Gui", function()
	loadstring(game:HttpGet("https://raw.githubusercontent.com/oxilegeek/oxi-cheats/main/oxi%20script", true))()
end)

BasicSetting:addButton("Delete Gui", function()
	deleteGui()
end)


OtherGui:addButton("Dex explorer", function()
	loadstring(game:HttpGet("https://raw.githubusercontent.com/oxilegeek/oxi-cheats/main/Dex", true))()
end)

-- cheat engine

-- infini Jump
UserInputService.InputBegan:Connect(function(input)
	if input.KeyCode == Enum.KeyCode.Space then
		if infiniJump == true then
			game.Players.LocalPlayer.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
			print(infiniJump)
		end
	end
end)







----------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------BOUCLE-------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------
runservice.Stepped:Connect(function()
	if alive then
		--Character

		if noclip == true then
			for a, b in pairs(workspace:GetChildren()) do
				if b.Name == game.Players.LocalPlayer.Name then
					for i, v in pairs(workspace[game.Players.LocalPlayer.Name]:GetChildren()) do
						if v:IsA("BasePart") then
							v.CanCollide = false
						end end end end
		else

		end

		if FollowBot then
			local plrtrack = game.Workspace:FindFirstChild(BotFocus)
			game.Players.LocalPlayer.Character.LowerTorso.Touched:Connect(function()
				game.Players.LocalPlayer.Character.Humanoid.Jump = true
			end)

			local path = game:GetService("PathfindingService"):ComputeRawPathAsync(game.Players.LocalPlayer.Character.HumanoidRootPart.Position,plrtrack.HumanoidRootPart.Position,512)
			if path.Status == Enum.PathStatus.Success then
				local points = path:GetPointCoordinates()
				if #points < 3 then
					game.Players.LocalPlayer.Character.Humanoid:MoveTo(plrtrack.HumanoidRootPart.Position)
				else
					game.Players.LocalPlayer.Character.Humanoid:MoveTo(points[3])
				end
			else
				game.Players.LocalPlayer.Character.Humanoid:MoveTo(plrtrack.HumanoidRootPart.Position)
			end
		end

		if ShowPosition then
			game.Players.LocalPlayer.PlayerGui.PositionGui.Pos.Text = "X : " ..math.floor(game.Players.LocalPlayer.Character.HumanoidRootPart.Position.X) .."  Y : " ..math.floor(game.Players.LocalPlayer.Character.HumanoidRootPart.Position.Y) .."  Z : " ..math.floor(game.Players.LocalPlayer.Character.HumanoidRootPart.Position.Z)
		end

		if autoSetSpeed then
			game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = basicSpeed
			game.Players.LocalPlayer.Character.Humanoid.JumpPower = basicJump
			game.Workspace.Gravity = basicGravity
			game.Players.LocalPlayer.Character.Humanoid.HipHeight = basicLevitation / 10
		end










		--Animal simulator
		if game.GameId == 2023680558 then

			if slowloop >= 10 then
				slowloop = 1
			end
			slowloop = slowloop + 1


			if bringChest then
				game.Workspace.Treasures.Treasure1.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position)
			end

			if toChest then
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(game.Workspace.Treasures.Treasure5.Position)
			end

			if autocollect then
				game.ReplicatedStorage.TreasureEvent:FireServer()
			end

			if HideReward then
				game.Players.LocalPlayer.PlayerGui.newRewardGui.Enabled = false
			else
				game.Players.LocalPlayer.PlayerGui.newRewardGui.Enabled = true
			end

			if spamHit1 then
				game.ReplicatedStorage.jdskhfsIIIllliiIIIdchgdIiIIIlIlIli:FireServer(game.Players:FindFirstChild(killAuraTarget1).Character.Humanoid)
			end

			if spamHit2 then
				game.ReplicatedStorage.jdskhfsIIIllliiIIIdchgdIiIIIlIlIli:FireServer(game.Players:FindFirstChild(killAuraTarget2).Character.Humanoid)
			end

			if spamHit3 then
				game.ReplicatedStorage.jdskhfsIIIllliiIIIdchgdIiIIIlIlIli:FireServer(game.Players:FindFirstChild(killAuraTarget3).Character.Humanoid)
			end

			if spamHit4 then
				game.ReplicatedStorage.jdskhfsIIIllliiIIIdchgdIiIIIlIlIli:FireServer(game.Players:FindFirstChild(killAuraTarget4).Character.Humanoid)
			end

			if ZombieKillAura then
				if slowloop >= 10 then
					local hit = findNearestZombieTorso(game.Players.LocalPlayer.Character.HumanoidRootPart.Position)
					game.ReplicatedStorage.jdskhfsIIIllliiIIIdchgdIiIIIlIlIli:FireServer(hit.Parent.Humanoid)
				end
			end
			local function tpZombie()
				if ZombieAutofarm then
					if slowloop >= 10 then
						local hit = findNearestZombieTorso(game.Players.LocalPlayer.Character.HumanoidRootPart.Position)
						game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = true
						game.ReplicatedStorage.jdskhfsIIIllliiIIIdchgdIiIIIlIlIli:FireServer(hit.Parent.Humanoid)
						wait(0.5)
						game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(hit.Position.X, hit.Position.Y + 20, hit.Position.Z)
					end
				end
			end
			spawn(tpZombie)

			if KillAura then
				if slowloop >= 10 then
					local hit = findNearestTorso(game.Players.LocalPlayer.Character.HumanoidRootPart.Position)
					game.ReplicatedStorage.jdskhfsIIIllliiIIIdchgdIiIIIlIlIli:FireServer(hit.Parent.Humanoid)
				end
			end

			if autoHit then
				vu:SetKeyDown("q")
				vu:SetKeyUp("q")
			end

			if autoEat then
				if cooldownEat >= 10 then
					cooldownEat = 0
					if game.Players.LocalPlayer.Character.Humanoid.Health < game.Players.LocalPlayer.Character.Humanoid.MaxHealth then
						vu:ClickButton1(Vector2.new(0.0))
						game.Players.LocalPlayer.Backpack.Food.Parent = game.Players.LocalPlayer.Character
					end
				else
					cooldownEat = cooldownEat + 1
				end
			end

			if autofarm then
				game.ReplicatedStorage.jdskhfsIIIllliiIIIdchgdIiIIIlIlIli:FireServer(game.Workspace.pleaseno.farm.Humanoid,1)
			end

			if _G.BossGorillaFarm then
				if game:GetService("Workspace").NPC:FindFirstChild("LavaGorilla") then
					game:GetService("ReplicatedStorage").jdskhfsIIIllliiIIIdchgdIiIIIlIlIli:FireServer(game:GetService("Workspace").NPC.LavaGorilla.Humanoid)
				end
			end

			if _G.BossCerberFarm then
				if game:GetService("Workspace").NPC:FindFirstChild("Trex") then
					game:GetService("ReplicatedStorage").jdskhfsIIIllliiIIIdchgdIiIIIlIlIli:FireServer(game:GetService("Workspace").NPC.Trex.Humanoid)
				end
			end

			if _G.BossDrakeFarm then
				if game:GetService("Workspace").NPC:FindFirstChild("Drake") then
					game:GetService("ReplicatedStorage").jdskhfsIIIllliiIIIdchgdIiIIIlIlIli:FireServer(game:GetService("Workspace").NPC.Drake.Humanoid)
				end
			end

			if _G.BossDragonSlayerFarm then
				if game:GetService("Workspace").NPC:FindFirstChild("DragonSlayer") then
					game:GetService("ReplicatedStorage").jdskhfsIIIllliiIIIdchgdIiIIIlIlIli:FireServer(game:GetService("Workspace").NPC.DragonSlayer.Humanoid)
				end
			end



			-- AUTOFARM
			if BossKillFarm then

				if game:GetService("Workspace").NPC:FindFirstChild("LavaGorilla") then
					game:GetService("ReplicatedStorage").jdskhfsIIIllliiIIIdchgdIiIIIlIlIli:FireServer(game:GetService("Workspace").NPC.LavaGorilla.Humanoid)
				end

				if game:GetService("Workspace").NPC:FindFirstChild("Trex") then
					game:GetService("ReplicatedStorage").jdskhfsIIIllliiIIIdchgdIiIIIlIlIli:FireServer(game:GetService("Workspace").NPC.Trex.Humanoid)
				end
			end



			if BossKillFarmFix then
				game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)

				if game:GetService("Workspace").NPC:FindFirstChild("Trex") then
					if game:GetService("Workspace").NPC:FindFirstChild("LavaGorilla") then
						if game:GetService("Workspace").NPC:FindFirstChild("Trex").Humanoid.Health >= game:GetService("Workspace").NPC:FindFirstChild("LavaGorilla").Humanoid.Health then
							if BossKillFarmFixFocus == "LavaGorilla" then
								BossKillFarmFixFocus = "Trex"
								game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-254, -438, 3390)
							end
						else
							if BossKillFarmFixFocus == "Trex" then
								BossKillFarmFixFocus = "LavaGorilla"
								game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(588, -347, 2098)
							end
						end
					else
						if BossKillFarmFixFocus == "LavaGorilla" then
							BossKillFarmFixFocus = "Trex"
							game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-254, -438, 3390)
						end
					end
				else
					if BossKillFarmFixFocus == "Trex" then
						BossKillFarmFixFocus = "LavaGorilla"
						game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(588, -347, 2098)
					end
				end


				if game:GetService("Workspace").NPC:FindFirstChild("Trex") then
					game:GetService("ReplicatedStorage").jdskhfsIIIllliiIIIdchgdIiIIIlIlIli:FireServer(game:GetService("Workspace").NPC.Trex.Humanoid)
				end

				if game:GetService("Workspace").NPC:FindFirstChild("LavaGorilla") then
					game:GetService("ReplicatedStorage").jdskhfsIIIllliiIIIdchgdIiIIIlIlIli:FireServer(game:GetService("Workspace").NPC.LavaGorilla.Humanoid)
				end
			end
		end
	end
	--------- END ANIMAL







	-- Build a boat
	if game.GameId == 210851291 then
		if BABFastAutofarm then
			if TheEnd then

			else

			end
		end

		if game.Players.LocalPlayer.PlayerGui.RiverResultsGui.Frame.Visible == true then
			if TheEnd then
				TheEnd = false
				autoFarmBAB()
			end
		end

		if antiPortalAbuse then
			if game.Players.LocalPlayer.Character.HumanoidRootPart.Position.Y < -25 then
				if game.Players.LocalPlayer.Character.HumanoidRootPart.Position.Z < 900 then
					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position.X, 5, game.Players.LocalPlayer.Character.HumanoidRootPart.Position.Z)
				end
			end
		end
	end
end)


--pizza place custom loop
local function customloopPizza()
	if game.GameId == 47545 then
		while alive do
			wait(0.3)
			if doCashier then
				local num = 0
				repeat
					wait()
					num += 1
					local c = FindFirstCustomer()
					if c then
						local dialog = c.Head.Dialog.Correct.ResponseDialog or ''
						local rootMoved = false
						if (root.Position-Vector3.new(46.34, 3.80, 82.02)).magnitude>9 then rootMoved = true root.CFrame = CFrame.new(46.34, 3.80, 82.02) wait(.1) end
						local order = "MountainDew"
						if dialog:sub(-8)=="instead." then
							dialog = dialog:sub(-30)
						end
						if dialog:find("pepperoni",1,true) then
							order = "PepperoniPizza"
						elseif dialog:find("sausage",1,true) then
							order = "SausagePizza"
						elseif dialog:find("cheese",1,true) then
							order = "CheesePizza"
						end

						network:FireServer("OrderComplete", c, order, workspace.Register3)
						if rootMoved then wait(.1) end
					end
				until num == 8
			end



			if doCook then
				local order = getOrders()[1]
				local topping
				if order=="Pepperoni" or order=="Sausage" then topping=order end
				local cookD = FindFirstDew()
				local raw,cookP,trash
				if topping then
					--pepperoni order avoids sausage dough and vice verca
					raw,cookP,trash = FindDoughAndWithout(topping=="Pepperoni" and "Sausage" or "Pepperoni")
				else
					raw,cookP,trash = FindDoughAndWithout()
				end
				local rootMoved = false
				local ovens = workspace.Ovens:GetChildren()
				for i = #ovens, 2, -1 do --shuffle
					local j = RNG:NextInteger(1, i)
					ovens[j], ovens[i] = ovens[i], ovens[j]
				end
				--move final pizza
				if cookP and tick()-cookPtick>0.8 then
					local oven = getOvenNear(cookP.Position)
					if oven==nil or oven.IsOpen.Value then
						cookPtick=tick()
						if (root.Position-Vector3.new(44.63, 6.60, 45.20)).magnitude>9 then rootMoved = true root.CFrame = CFrame.new(44.63, 6.60, 45.20) wait(.1) end
						network:FireServer("UpdateProperty", cookP, "CFrame", CFrame.new(56,4.1,38))
					end
				end
				if order then
					if order=="Dew" and cookD and tick()-cookDtick>0.8 then
						--move dew if ordered
						if cookD:FindFirstChild("IsBurned") and not cookD.IsBurned.Value then
							cookDtick=tick()
							if (root.Position-Vector3.new(44.63, 6.60, 45.20)).magnitude>9 then rootMoved = true root.CFrame = CFrame.new(44.63, 6.60, 45.20) wait(.1) end
							network:FireServer("UpdateProperty", cookD, "CFrame", CFrame.new(53,4.68,36.5))
						end
					elseif order~="Dew" and raw and raw.Parent and supplyCounts[order]>0 and supplyCounts.TomatoSauce>0 and supplyCounts.Cheese>0 then
						--make pizza
						if raw.Mesh.Scale.Y>1.5 then
							if (root.Position-Vector3.new(44.63, 6.60, 45.20)).magnitude>9 then rootMoved = true root.CFrame = CFrame.new(44.63, 6.60, 45.20) wait(.1) end
							network:FireServer("UpdateProperty", raw, "CFrame", CFrame.new(RNG:NextNumber(29.6,44.6),3.7,RNG:NextNumber(42.5,48.5)))
							wait()
							network:FireServer("SquishDough", raw)
						else
							--make sure it will have an oven
							local oven
							for _,o in ipairs(ovens) do
								if isFullyOpen(o) then
									local other = getDoughNear(o.Bottom.Position)
									if other==nil or not (other.BrickColor.Name=="Bright orange" and ffc(other.SG.Frame,"TomatoSauce") and ffc(other.SG.Frame,"MeltedCheese")) then
										if other then
											--replace mistaken dough
											if (root.Position-Vector3.new(44.63, 6.60, 45.20)).magnitude>9 then rootMoved = true root.CFrame = CFrame.new(44.63, 6.60, 45.20) wait(.1) end
											network:FireServer("UpdateProperty", other, "CFrame", CFrame.new(RNG:NextNumber(29.6,44.6),3.7,RNG:NextNumber(42.5,48.5)))
											wait()
										end
										oven=o
										break
									end
								end
							end
							if oven and raw.Parent==workspace.AllDough then
								--make
								if (root.Position-Vector3.new(44.63, 6.60, 45.20)).magnitude>9 then rootMoved = true root.CFrame = CFrame.new(44.63, 6.60, 45.20) wait(.1) end
								network:FireServer("AddIngredientToPizza", raw,"TomatoSauce")
								network:FireServer("AddIngredientToPizza", raw,"Cheese")
								network:FireServer("AddIngredientToPizza", raw,topping)
								network:FireServer("UpdateProperty", raw, "CFrame", oven.Bottom.CFrame+Vector3.new(0,0.7,0))
								oven.Door.ClickDetector.Detector:FireServer()
								--mark as cooking
								cookingDict[order]=cookingDict[order]+1
								local revoked=false
								spawn(function()
									raw.AncestryChanged:Wait()
									if not revoked then
										cookingDict[order]=cookingDict[order]-1
										revoked=true
									end
								end)
								delay(40, function()
									if not revoked then
										cookingDict[order]=cookingDict[order]-1
										revoked=true
									end
								end)
							end
						end
					end
				end
				--open unnecessarily closed ovens
				for _,o in ipairs(ovens) do
					local bar = o.Door.Meter.SurfaceGui.ProgressBar.Bar
					if o.IsOpen.Value==false and (o.IsCooking.Value==false or (Vector3.new(bar.ImageColor3.r,bar.ImageColor3.g,bar.ImageColor3.b)-Vector3.new(.871,.518,.224)).magnitude>.1) then
						if (root.Position-Vector3.new(44.63, 6.60, 45.20)).magnitude>9 then rootMoved = true root.CFrame = CFrame.new(44.63, 6.60, 45.20) wait(.1) end
						o.Door.ClickDetector.Detector:FireServer()
						break
					end
				end
				--trash
				if trash and (trash.IsBurned.Value==false or getOvenNear(trash.Position)==nil or getOvenNear(trash.Position).IsOpen.Value) then
					--closed oven breaks if you take burnt out of it
					if (root.Position-Vector3.new(44.63, 6.60, 45.20)).magnitude>9 then rootMoved = true root.CFrame = CFrame.new(44.63, 6.60, 45.20) wait(.1) end
					network:FireServer("UpdateProperty", trash, "CFrame", CFrame.new(47.9,RNG:NextNumber(-10,-30),72.5))
				end
				if rootMoved then wait(.1) end
			end


			if doBoxer then
				local boxP,boxD = FindBoxingFoods()
				local closedBox,openBox,fullBox = FindBoxes()
				local rootMoved = false
				if boxD and tick()-boxDtick>0.8 then
					boxDtick=tick()
					if (root.Position-Vector3.new(54.09, 3.80, 23.150)).magnitude>9 then rootMoved = true root.CFrame = CFrame.new(54.09, 3.80, 23.15) wait(.1) end
					network:FireServer("UpdateProperty", boxD, "CFrame", CFrame.new(63,4.9,-1,-1,0,0,0,1,0,0,0,-1))
				end
				if fullBox then
					if fullBox.Name=="BoxOpen" then
						if (root.Position-Vector3.new(54.09, 3.80, 23.150)).magnitude>9 then rootMoved = true root.CFrame = CFrame.new(54.09, 3.80, 23.15) wait(.1) end
						network:FireServer("CloseBox", fullBox)
						--will be moved next loop
					elseif tick()-boxPtick>0.8 then
						if (root.Position-Vector3.new(54.09, 3.80, 23.150)).magnitude>9 then rootMoved = true root.CFrame = CFrame.new(54.09, 3.80, 23.15) wait(.1) end
						network:FireServer("UpdateProperty", fullBox, "CFrame", CFrame.new(68.2,4.4,-1,-1,0,0,0,1,0,0,0,-1))
						boxPtick=tick()
					end
				end
				if closedBox and not openBox then
					if (root.Position-Vector3.new(54.09, 3.80, 23.150)).magnitude>9 then rootMoved = true root.CFrame = CFrame.new(54.09, 3.80, 23.15) wait(.1) end
					network:FireServer("UpdateProperty", closedBox, "CFrame", CFrame.new(RNG:NextNumber(62.5,70.5),3.5,RNG:NextNumber(11,25)))
					wait()
					network:FireServer("OpenBox", closedBox)
				end
				if openBox and boxP then
					if (root.Position-Vector3.new(54.09, 3.80, 23.150)).magnitude>9 then rootMoved = true root.CFrame = CFrame.new(54.09, 3.80, 23.15) wait(.1) end
					network:FireServer("UpdateProperty", boxP, "Anchored", true)
					network:FireServer("UpdateProperty", openBox, "Anchored", true)
					wait()
					network:FireServer("UpdateProperty", boxP, "CFrame", openBox.CFrame+Vector3.new(0,-2,0))
					wait()
					network:FireServer("AssignPizzaToBox", openBox, boxP)
				end
				if rootMoved then wait(.1) end
			end

			if doDelivery then
				local del = FindFirstDeliveryTool()
				print(delTool)
				if delTool==nil then
					--get tool
					local invTool = false

					for i, v in pairs(player.Backpack:GetChildren()) do
						print("v")
						if v.ClassName=="Tool" and v.Name:match("^%u%d$") and ffc(v,"House") and ffc(v,"Handle") and ffc(v,"Order") and v.Order.Value:match("%a") then
							print("accepted")
							invTool = true
							v.Parent = character
							wait(0.2)
							v.Parent = workspace
						end
					end

					if not invTool and del then
						delTool=del


						if (root.Position-delTool.Handle.Position).magnitude>19 then
							root.CFrame = CFrame.new(delTool.Handle.Position+Vector3.new(0,1,-15)) 
						end
						delTool.Handle.CanCollide=false
						delTool.Handle.CFrame = root.CFrame
						wait(0.9)
						delay(6,forgetDeliveryTool)
					end
				elseif delTool and delTool.Parent==character and delTouched==false then
					--deliver to house
					local housePart = getHousePart(delTool.Name)
					print(housePart)
					if housePart then
						delTouched=true
						root.CFrame = housePart.CFrame+Vector3.new(0,6,0)
						wait(5)
						delTool = nil
						delTouched=false
					end
				end
			end





			if doSupplier then
				local refill=false
				for s,c in pairs(supplyCounts) do
					if c <= 70 then
						refill=true
						print("refill")
						break
					end
				end
				if refill then
					local oldcf = root.CFrame
					local alt=0
					local waiting = false
					local waitingTick = 0
					local lastBox
					while doSupplier do
						--check if refill is done otherwise hit buttons
						local fulfilled=true
						local boxes = workspace.AllSupplyBoxes:GetChildren()
						for s,c in pairs(supplyCounts) do
							if c < 95 then
								fulfilled=false
								local count = 0
								if #boxes > 30 then
									for i=1,#boxes do
										local box = boxes[i]
										if bcolorToSupply[box.BrickColor.Name]==s and box.Anchored==false and box.Position.Z < -940 then
											count=count+1
										end
									end
								end
								if count < 10 then
									print("tp to button")
									simTouch(supplyButtons[s])
									wait(0.3)
								end
							end
						end
						if fulfilled then
							break
						end
						wait(1.5)
						--check if can finish waiting for boxes to move
						if waiting and (lastBox.Position.X>42 or tick()-waitingTick>5) then
							waiting=false
							if lastBox.Position.X<42 then
								--clear boxes if stuck
								root.CFrame=CFrame.new(20.5,8,-35)
								wait()
								local boxes = workspace.AllSupplyBoxes:GetChildren()
								for i=1,#boxes do
									local box = boxes[i]
									if box.Anchored==false and box.Position.Z>-55 then
										network:FireServer("UpdateProperty", box, "CFrame", CFrame.new(RNG:NextNumber(0,40),RNG:NextNumber(-10,-30),-70))
										wait()
									end
								end
								wait()
							end
						end
						if not waiting then
							--move boxes
							root.CFrame=CFrame.new(8,12.4,-1020)
							wait()
							alt=1-alt
							lastBox=nil
							local j=0
							local boxes = workspace.AllSupplyBoxes:GetChildren()
							for i=1,#boxes do
								local box = boxes[i]
								if box.Anchored==false and box.Position.Z < -940 and bcolorToSupply[box.BrickColor.Name] and supplyCounts[bcolorToSupply[box.BrickColor.Name]]<95 then
									box.CFrame = CFrame.new(38-4*j,5,-7-5*alt)
									network:FireServer("UpdateProperty", box, "CFrame", box.CFrame)
									lastBox=box
									j=j+1
									if j>8 then break end
								end
							end
							if alt==0 and lastBox then
								waiting=true
								waitingTick=tick()
							end
						end
					end
					root.CFrame=oldcf
				end
			end

		end

		--------- END ANIMAL
	end
end

spawn(customloopPizza)



-- delete old menu
game.CoreGui.ChildAdded:Connect(function(child)
	if child.Name == "Oxi cheats" then
		deleteGui()
	end
end)



-- load
venyx:SelectPage(venyx.pages[1], true)
